package edu.upv.poo;

import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseEvent;

public class MyJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyJFrame
     */
    public MyJFrame() {
        initComponents();
        MyJPanelMouseHandler mouseHandler =
                new MyJPanelMouseHandler();
        myJPanel.addMouseListener(mouseHandler);
        myJPanel.addMouseMotionListener(mouseHandler);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myJPanel = new javax.swing.JPanel();
        jLabelX = new javax.swing.JLabel();
        jLabelY = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myJPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myJPanelMouseClicked(evt);
            }
        });

        jLabelX.setText("0");

        jLabelY.setText("0");

        javax.swing.GroupLayout myJPanelLayout = new javax.swing.GroupLayout(myJPanel);
        myJPanel.setLayout(myJPanelLayout);
        myJPanelLayout.setHorizontalGroup(
            myJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myJPanelLayout.createSequentialGroup()
                .addContainerGap(658, Short.MAX_VALUE)
                .addGroup(myJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelY)
                    .addComponent(jLabelX))
                .addGap(35, 35, 35))
        );
        myJPanelLayout.setVerticalGroup(
            myJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myJPanelLayout.createSequentialGroup()
                .addContainerGap(388, Short.MAX_VALUE)
                .addComponent(jLabelX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelY)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myJPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myJPanelMouseClicked
        System.out.println("CLICK EN EL PANEL");
    }//GEN-LAST:event_myJPanelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelX;
    private javax.swing.JLabel jLabelY;
    private javax.swing.JPanel myJPanel;
    // End of variables declaration//GEN-END:variables

    class MyJPanelMouseHandler
            implements MouseMotionListener, MouseListener {

        @Override
        public void mouseDragged(MouseEvent e) {
            System.out.printf(
                    "Mouse dragged at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
            
        }

        @Override
        public void mouseMoved(MouseEvent e) {
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            System.out.printf(
                    "Mouse Clicked at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }

        @Override
        public void mousePressed(MouseEvent e) {
            System.out.printf(
                    "Mouse Pressed at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            System.out.printf(
                    "Mouse released at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }

        @Override
        public void mouseEntered(MouseEvent e) {
            System.out.printf(
                    "Mouse entered at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }

        @Override
        public void mouseExited(MouseEvent e) {
            System.out.printf(
                    "Mouse exited at %d, %d \n",
                    e.getX(), e.getY());
            jLabelX.setText(Integer.toString(e.getX()));
            jLabelY.setText(Integer.toString(e.getY()));
        }
                
    }  // end class MyJPanelMouseHandler

}  // end class MyJFrame
